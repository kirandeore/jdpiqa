export default data = [{
    question: 'Explain what is Java Design Pattern?',
    answer: 'A design pattern is a language independent strategies for solving common object oriented design problem.  It describes how to structure classes to meet a given requirement.'
}, {
    question: 'Explain what is creational design patterns and Factory pattern?',
    answer: `Creational design pattern: This pattern is used to define and describe how objects are created at class instantiation time.<br/><br/>Factory pattern: The factory pattern is used to create an object without exposing the creation logic to the client and refer to a newly created object using a common interface.
    `
}, {
    question: 'Which design pattern is used to get a way to access the elements of a collection object in sequential manner?',
    answer: 'Iterator pattern is used to get a way to access the elements of a collection object in sequential manner.'
}, {
    question: 'When service locator pattern is used?',
    answer: 'When we want to locate various services using JNDI we use service locator pattern.'
}, {
    question: 'Mention in how many ways can you create singleton pattern?',
    answer: `To create single objects there are two famous ways:<br/>Lazy loading<br/>Eager loading`
}, {
    question: 'Mention which pattern is used when we need to decouple an abstraction from its implementation?',
    answer: `When we want to decouple an abstraction from its implementation in order that two can vary independently we use bridge pattern.`
}, {
    question: 'Mention which design pattern will be helpful to add new functionality to an existing object?',
    answer: 'A decorator pattern allows a user to add new functionality to an existing object without changing its structure.'
}, {
    question: 'Explain how can you create a Singleton class in Java?',
    answer: `It is two step process,<br/>- First make the constructor private so that new operator cannot be used to instantiate the class<br/>- Return an object of the object if not null otherwise create the object and return the same via a method.`
}, {
    question: 'Is it possible to write thread safe singleton in Java?',
    answer: 'To write thread safe singleton in Java there are multiple ways for example by using static singleton instance initialized during class loading, by writing singleton using double checked locking. Java Enum is the simplest way to create thread safe singleton.'
}, {
    question: 'Mention how one should describe a design pattern?',
    answer: `To describe a design pattern, following things need to be taken care of:<br/>- Pattern name and classification<br/>- Problem and solution<br/>- Consequences : Variation and language dependent alternatives should also be addressed<br/>- Know Uses: Identify the uses in the real systems and its efficiency`
}, {
    question: 'Mention why access to the non-static variable is not allowed from static method in Java?',
    answer: 'You cannot access non-static data from static context because non-static variable are associated with a specific instance of an object while static is not associated with any instance.'
}, {
    question: 'Mention which pattern is useful when one has to pass data with multiple attributes in one shot from client to server?',
    answer: 'Transfer Object Pattern is useful when one has to pass data with multiple attributes in one shot from client to the server.'
}, {
    question: 'Name some of the entities of DAO pattern?',
    answer: `Some of the entities of DAO include,<br/>- Data access object concrete class<br/>- Data access object interface<br/>- Model object or value object`
},





{
    question: 'Mention when can you use the Intercepting pattern?',
    answer: 'Intercepting pattern is used when you have to do some pre-processing or post processing with request or response of the application.'
}, {
    question: 'Mention when to use a Factory Pattern?',
    answer: `Factory pattern can be used,<br/>- When a class does not know which class of objects needs to create<br/>- When class specifies its sub-classes to specify which objects to create<br/>- In programming language, you can use factory pattern where you have to create an object of any one of sub-classes depending on the given data
    `
}, {
    question: 'Explain in singleton pattern whether it is better to make the whole getinstance() method synchronized or just critical section is enough? Which one is preferable?',
    answer: 'Synchronization of whole getinstance() method is costly and is only needed during the initialization on singleton instance, to stop creating another instance of Singleton.  Therefore it is better to only synchronize critical section and not the whole method.'
}, {
    question: 'Mention in how many ways can you write singleton class in Java?',
    answer: `One can write singleton class in Java in four ways:<br>- Singleton with public static final field initialized during class loading<br>- Singleton generated by static nested class, also referred as singleton holder pattern<br>- Singleton by synchronizing get instance () method<br>- From Java 5 on-wards using Enums`
}, {
    question: 'Explain how can you prevent creating another instance of singleton using clone() method?',
    answer: 'The preferred way to prevent creating another instance of a singleton is by not implementing Cloneable interface and if you do just throw an exception from clone() method “ not to create a clone of singleton class”.'
}, {
    question: 'Mention what is the difference between “throw” and “throws”?',
    answer: 'Keyword “Throw” is used to explicitly throw as an exception, while “Throws” is utilized to handle checked exceptions for re-intimating the compiler that exceptions are being handled.   The throws need to be used in the method’s definition and also while invoking the method that raises checked exceptions.'
}, {
    question: 'Mention which classes in JDK uses singleton pattern?',
    answer: 'Java.lang.Runtime classes uses singleton pattern in JDK.'
}, {
    question: 'Mention what is the limitation of using singleton pattern?',
    answer: 'The singleton pattern ensures that a class has only one instance and to provide a global point of access to it.  But at the same time this becomes its limitation as most classes in an application you will need to create multiple instances.'
}, {
    question: 'Mention what is the difference between VO and JDO?',
    answer: 'The difference between JDO and VO is that the JDO is a persistent technology that compete against entity beans in enterprise application development.  It enables you to create POJO (plain old java objects) and persist them to the database.<br/>While VO stands for value objects represents an abstract design pattern used in conjuction with entity beans, jdbc and possibly even JDO to overcome commonly found isolation and transactional problems in enterprise apps.'
}]

// export default data = [{
//     question: 'Tell me about yourself',
//     answer: `Start with the present and tell why you are well qualified for the position. Remember that the key to all successful interviewing is to match your qualifications to what the interviewer is looking for. In other words you must sell what the buyer is buying. This is the single most important strategy in job hunting. 

// So, before you answer this or any question it's imperative that you try to uncover your interviewer's greatest need, want, problem or goal.
    
// To do so, make you take these two steps:
    
// 1. Do all the homework you can before the interview to uncover this person's wants and needs (not the generalized needs of the industry or company)
// 2. As early as you can in the interview, ask for a more complete description of what the position entails. You might say: “I have a number of accomplishments I'd like to tell you about, but I want to make the best use of our time together and talk directly to your needs. To help me do, that, could you tell me more about the most important priorities of this position? All I know is what I (heard from the recruiter, read in the classified ad, etc.)”
    
// Then, ALWAYS follow-up with a second and possibly, third question, to draw out his needs even more. Surprisingly, it's usually this second or third question that unearths what the interviewer is most looking for.
    
// You might ask simply, "And in addition to that?..." or, "Is there anything else you see as essential to success in this position?:
    
// This process will not feel easy or natural at first, because it is easier simply to answer questions, but only if you uncover the employer's wants and needs will your answers make the most sense. Practice asking these key questions before giving your answers, the process will feel more natural and you will be light years ahead of the other job candidates you're competing with.
    
// After uncovering what the employer is looking for, describe why the needs of this job bear striking parallels to tasks you've succeeded at before. Be sure to illustrate with specific examples of your responsibilities and especially your achievements, all of which are geared to present yourself as a perfect match for the needs he has just described.`
// }, {
//     question: 'What are your greatest strengths?',
//     answer: `You know that your key strategy is to first uncover your interviewer's greatest wants and needs before you answer questions. And from Question 1, you know how to do this.
// Prior to any interview, you should have a list mentally prepared of your greatest strengths. You should also have, a specific example or two, which illustrates each strength, an example chosen from your most recent and most impressive achievements.
// You should, have this list of your greatest strengths and corresponding examples from your achievements so well committed to memory that you can recite them cold after being shaken awake at 2:30AM.
// Then, once you uncover your interviewer's greatest wants and needs, you can choose those achievements from your list that best match up.
// As a general guideline, the 10 most desirable traits that all employers love to see in their employees are:
// 1. A proven track record as an achiever...especially if your achievements match up with the employer's greatest wants and needs.
// 2. Intelligence...management "savvy".
// 3. Honesty...integrity...a decent human being.
// 4. Good fit with corporate culture...someone to feel comfortable with...a team player who meshes well with interviewer's team.
// 5. Likeability...positive attitude...sense of humor.
// 6. Good communication skills.
// 7. Dedication...willingness to walk the extra mile to achieve excellence.
// 8. Definiteness of purpose...clear goals.
// 9. Enthusiasm...high level of motivation.
// 10. Confident...healthy...a leader. `
// }, {
//     question: 'What are your greatest weaknesses?',
//     answer: `TRAPS: Beware - this is an eliminator question, designed to shorten the candidate list. Any admission of a weakness or fault will earn you an “A” for honesty, but an “F” for the interview.
// PASSABLE ANSWER: Disguise a strength as a weakness.
// Example: “I sometimes push my people too hard. I like to work with a sense of urgency and everyone is not always on the same wavelength.”
// Drawback: This strategy is better than admitting a flaw, but it's so widely used, it is transparent to any experienced interviewer.
// BEST ANSWER: (and another reason it's so important to get a thorough description of your interviewer's needs before you answer questions): Assure the interviewer that you can think of nothing that would stand in the way of your performing in this position with excellence. Then, quickly review you strongest qualifications.
// Example: “Nobody's perfect, but based on what you've told me about this position, I believe I' d make an outstanding match. I know that when I hire people, I look for two things most of all. Do they have the qualifications to do the job well, and the motivation to do it well? Everything in my background shows I have both the qualifications and a strong desire to achieve excellence in whatever I take on. So I can say in all honesty that I see nothing that would cause you even a small concern about my ability or my strong desire to perform this job with excellence.”
// Alternate strategy (if you don't yet know enough about the position to talk about such a perfect fit): Instead of confessing a weakness, describe what you like most and like least, making sure that what you like most matches up with the most important qualification for success in the position, and what you like least is not essential.
// Example: Let's say you're applying for a teaching position. “If given a choice, I like to spend as much time as possible in front of my prospects selling, as opposed to shuffling paperwork back at the office. Of course, I long ago learned the importance of filing paperwork properly, and I do it conscientiously. But what I really love to do is sell (if your interviewer were a sales manager, this should be music to his ears.)`
// }, {
//     question: 'Tell me about something you did – or failed to do – that you now feel a little ashamed of.',
//     answer: `TRAPS: There are some questions your interviewer has no business asking, and this is one. But while you may feel like answering, “none of your business,” naturally you can’t. Some interviewers ask this question on the chance you admit to something, but if not, at least they’ll see how you think on your feet.
// Some unprepared candidates, flustered by this question, unburden themselves of guilt from their personal life or career, perhaps expressing regrets regarding a parent, spouse, child, etc. All such answers can be disastrous.
// BEST ANSWER: As with faults and weaknesses, never confess a regret. But don’t seem as if you’re stonewalling either.
// Best strategy: Say you harbor no regrets, then add a principle or habit you practice regularly for healthy human relations.
// Example: Pause for reflection, as if the question never occurred to you. Then say, “You know, I really can’t think of anything.” (Pause again, then add): “I would add that as a general management principle, I’ve found that the best way to avoid regrets is to avoid causing them in the first place. I practice one habit that helps me a great deal in this regard. At the end of each day, I mentally review the day’s events and conversations to take a second look at the people and developments I’m involved with and do a doublecheck of what they’re likely to be feeling. Sometimes I’ll see things that do need more follow-up, whether a pat on the back, or maybe a five minute chat in someone’s office to make sure we’re clear on things…whatever.”
// “I also like to make each person feel like a member of an elite team, like the Boston Celtics or LA Lakers in their prime. I’ve found that if you let each team member know you expect excellence in their performance…if you work hard to set an example yourself…and if you let people know you appreciate and respect their feelings, you wind up with a highly motivated group, a team that’s having fun at work because they’re striving for excellence rather than brooding over slights or regrets.”`
// }, {
//     question: 'Why are you leaving (or did you leave) this position?',
//     answer: `You know that your key strategy is to first uncover your interviewer's greatest wants and needs before you answer questions. And from Question 1, you know how to do this. Prior to any interview, you should have a list mentally prepared of your greatest strengths. You should also have, a specific example or two, which illustrates each strength, an example chosen from your most recent and most impressive achievements.`
//  }
// ]